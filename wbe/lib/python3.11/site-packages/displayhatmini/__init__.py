from gpiozero import Button, PWMLED
from ST7789 import ST7789

__version__ = '0.0.2'


class DisplayHATMini():
    # User buttons
    BUTTON_A = 5
    BUTTON_B = 6
    BUTTON_X = 16
    BUTTON_Y = 24

    # Onboard RGB LED
    LED_R = 17
    LED_G = 27
    LED_B = 22

    # LCD Pins
    SPI_PORT = 0
    SPI_CS = 1
    SPI_DC = 9
    BACKLIGHT = 13

    # LCD Size
    WIDTH = 320
    HEIGHT = 240

    def __init__(self, buffer, backlight_pwm=False):
        """Initialise displayhatmini with gpiozero"""
        self.buffer = buffer

        # Setup user buttons with gpiozero
        self.button_a = Button(self.BUTTON_A)
        self.button_b = Button(self.BUTTON_B)
        self.button_x = Button(self.BUTTON_X)
        self.button_y = Button(self.BUTTON_Y)

        # Setup user LEDs with gpiozero PWMLED
        self.led_r_pwm = PWMLED(self.LED_R)
        self.led_g_pwm = PWMLED(self.LED_G)
        self.led_b_pwm = PWMLED(self.LED_B)

        if backlight_pwm:
            self.backlight_pwm = PWMLED(self.BACKLIGHT)
        else:
            self.backlight_pwm = None

        self.st7789 = ST7789(
            port=self.SPI_PORT,
            cs=self.SPI_CS,
            dc=self.SPI_DC,
            backlight=None if backlight_pwm else self.BACKLIGHT,
            width=self.WIDTH,
            height=self.HEIGHT,
            rotation=180,
            spi_speed_hz=60 * 1000 * 1000
        )

    def set_led(self, r=0, g=0, b=0):
        """Set LED brightness (0.0 to 1.0)"""
        self.led_r_pwm.value = 1.0 - r
        self.led_g_pwm.value = 1.0 - g
        self.led_b_pwm.value = 1.0 - b

    def set_backlight(self, value):
        """Set backlight brightness (0.0 to 1.0)"""
        if self.backlight_pwm is not None:
            self.backlight_pwm.value = value
        else:
            self.st7789.set_backlight(int(value * 255))

    def on_button_pressed(self, callback):
        """Register callback function for button presses"""
        self.button_a.when_pressed = lambda: callback(self.BUTTON_A)
        self.button_b.when_pressed = lambda: callback(self.BUTTON_B)
        self.button_x.when_pressed = lambda: callback(self.BUTTON_X)
        self.button_y.when_pressed = lambda: callback(self.BUTTON_Y)

    def read_button(self, pin):
        """Check if a button is pressed"""
        if pin == self.BUTTON_A:
            return self.button_a.is_pressed
        elif pin == self.BUTTON_B:
            return self.button_b.is_pressed
        elif pin == self.BUTTON_X:
            return self.button_x.is_pressed
        elif pin == self.BUTTON_Y:
            return self.button_y.is_pressed
        return False

    def display(self):
        """Update display"""
        self.st7789.display(self.buffer)

